name: Build LLauncher

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build-linux:
    name: Build Linux binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
      - name: Install qemu for ARM (if needed)
        if: matrix.arch == 'aarch64'
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static binfmt-support
      - name: Build binary
        run: |
          if [ "${{ matrix.arch }}" == "x86_64" ]; then
            pyinstaller --clean --onefile --name llauncher_linux_x64 main.py
          else
            pyinstaller --clean --onefile --name llauncher_linux_arm64 main.py
          fi
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: llauncher-linux-${{ matrix.arch }}
          path: |
            dist/llauncher_linux_x64
            dist/llauncher_linux_arm64

  build-windows:
    name: Build Windows binary
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
      - name: Build binary
        run: |
          pyinstaller --clean --onefile --name llauncher_windows_x64.exe main.py
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: llauncher-windows-x64
          path: dist/llauncher_windows_x64.exe

  build-macos:
    name: Build macOS Universal binary
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
      - name: Build Intel and ARM binaries
        run: |
          # Build x86_64
          arch -x86_64 pyinstaller --clean --onefile --distpath dist/x86_64 --name llauncher_macos_x64 main.py
          # Build arm64
          arch -arm64 pyinstaller --clean --onefile --distpath dist/arm64 --name llauncher_macos_arm64 main.py
          # Create universal binary
          mkdir -p dist/universal
          lipo -create dist/x86_64/llauncher_macos_x64 dist/arm64/llauncher_macos_arm64 -output dist/universal/llauncher_macos_universal
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: llauncher-macos-universal
          path: dist/universal/llauncher_macos_universal
